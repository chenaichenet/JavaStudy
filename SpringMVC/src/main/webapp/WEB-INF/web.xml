<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--注册springmvc的核心对象DispatcherServlet，中央调度器
        需要在tomcat服务器启动后，创建DispatcherServlet对象的实例
        因为DispatcherServlet在创建过程中会同时创建springmvc容器对象
        会读取springmvc配置文件，把配置文件中的对象都创建好，但用户发起请求时，可以直接使用对象

        servlet的初始化会执行init()方法，DispatcherServlet在init()方法中
            //创建容器，读取配置文件
            WebApplicationContext context=new ClasspathXmlApplicationContext("spring.xml");
            //把容器对象放入到ServletContext中
            getServletContext().setAttribute(key,context);

        启动后会读取/WEB-INF/springmvc-servlet.xml（/WEB-INF/myspringmvc-servlet.xml）
        spirngmvc创建容器对象是，读取的配置文件默认是/WEB-INF/<servlet-name>-servlet.xml
    -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--自定义springmvc读取配置文件的位置-->
        <init-param>
            <!--springmvc的配置文件的位置的属性-->
            <param-name>contextConfigLocation</param-name>
            <!--指定自定义文件路径-->
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--在tomcat启动后就创建Servlet对象
            load-on-startup：启动时进行加载，表示tomcat启动后创建对象的顺序-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!--使用框架的时候，url-pattern有两种值可以使用
            1、使用扩展名，语法*.xxx，xxx是自定义扩展名。如*.do，*.action等
                http://localhost:8080/spring/some.do，都结果springmvc来处理。
            2、使用斜杠“/”-->
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <!--声明框架中提供的过滤器，用于解决demo3中提到的中文乱码问题-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!--设置项目中使用的字符编码-->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <!--强制请求对象（HttpServletRequest）使用encoding编码的值-->
        <init-param>
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--强制应答对象（HttpSerlvetResponse）使用encoding编码的值-->
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--这两个对象的名称是过滤器源码中定义的，默认为false-->
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--mytest包中的项目需要-->
    <!--注册监听器-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:springmvc.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
</web-app>